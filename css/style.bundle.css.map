{"version":3,"sources":["webpack:///./src/scss/base.scss","webpack:///./src/scss/modifiers.scss","webpack:///./src/scss/mixins.scss","webpack:///./src/scss/objects.scss","webpack:///./src/scss/current_project/index.scss","webpack:///./src/scss/functions.scss"],"names":[],"mappings":"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","file":"./css/style.bundle.css","sourcesContent":["\n//-shit\n\n.clearfix:after {\n    content:'';\n    display: table;\n    width: 100%;\n    clear: both;\n}\n\n* {\n    padding: 0;\n    margin: 0;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n    transition: all .2s;\n}\n\n*:active, *:focus {\n\toutline: none;\n}\n\n*::-moz-focus-inner {\n\tborder: 0;\n}\n\ninput[type=radio], input[type=checkbox] {\n    display:none;\n}\n\n//-screens\n.main_screen {\n\tdisplay: flex;\n\twidth: 100%;\n\tmin-height: 100vh;\n}\n\n\n//-containers\n.main_container-horizontal {\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 0 auto;\n}\n\n.main_container-vertical {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0 auto;\n}\n\n.main_container-grid {\n  display: grid;\n\n\n}\n\n\n//-elements\nimg {\n\twidth: 100%;\n\tmax-width: 100%;\n}\n\nhtml {\n\tfont-size: $font_size-global * 1px;\n}\n\n.fake-div {\n\twidth: 100%;\n\tdisplay: block;\n}\n\n.button\t{\n\tcursor: pointer;\n\n}\n\n.button:hover {\n\n}\n\n//functions\n","\n//-vision\n\n.-hide-phone-small {\n\t@include _phone-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-phone-big {\n\t@include _phone-big {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-small {\n\t@include _tablet-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-middle {\n\t@include _tablet-middle {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-tablet-big {\n\t@include _tablet-big {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide-desktop-small {\n\t@include _desktop-small {\n\t\tdisplay: none;\n\t}\n}\n\n.-hide {\n\tdisplay: none;\n}\n\n\n.-show-phone-small {\n\t@include _phone-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-phone-big {\n\t@include _phone-big {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-small {\n\t@include _tablet-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-middle {\n\t@include _tablet-middle {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-tablet-big {\n\t@include _tablet-big {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show-desktop-small {\n\t@include _desktop-small {\n\t\tdisplay: flex;\n\t}\n}\n\n.-show {\n\tdisplay: flex;\n}\n\n.-invisible-phone-small {\n\t@include _phone-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-phone-big {\n\t@include _phone-big {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-small {\n\t@include _tablet-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-middle {\n\t@include _tablet-middle {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-tablet-big {\n\t@include _tablet-big {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible-desktop-small {\n\t@include _desktop-small {\n\t\tvisibility: hidden;\n\t}\n}\n\n.-invisible {\n\tvisibility: hidden;\n}\n\n.-visible-phone-small {\n\t@include _phone-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-phone-big {\n\t@include _phone-big {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-small {\n\t@include _tablet-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-middle {\n\t@include _tablet-middle {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-tablet-big {\n\t@include _tablet-big {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible-desktop-small {\n\t@include _desktop-small {\n\t\tvisibility: visible;\n\t}\n}\n\n.-visible {\n\tvisibility: visible;\n}\n\n\n//-flex\n\n.-vertical {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.-horizontal {\n\tdisplay: flex;\n\tflex-direction: row;\n}\n\n.-vertical-inverse {\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n}\n\n.-horizontal-inverse {\n\tdisplay: flex;\n\tflex-direction: row-reverse;\n}\n\n.-wrap {\n \tflex-wrap: wrap;\n}\n\n\n//-width\n\n.-fit_content {\n\tmin-width: fit-content;\n}","\n//-adaptivity and relativity\n\n@mixin _desktop-small {\n    @media (max-width: 1700px){\n        @content;\n    }\n}\n\n@mixin _tablet-big {\n    @media (max-width: 1170px){\n        @content;\n    }\n}\n\n@mixin _tablet-middle {\n    @media (max-width: 768px){\n        @content;\n    }\n}\n\n@mixin _tablet-small {\n    @media (max-width: 600px){\n        @content;\n    }\n}\n\n@mixin _phone-big {\n    @media (max-width: 480px){\n        @content;\n    }\n}\n\n@mixin _phone-small{\n    @media (max-width: 370px){\n        @content;\n    }\n}\n\n\n//-flex\n\n@mixin SetFlexJustify ($justify_content: flex-start) {\n\n\tjustify-content: $justify_content;\n}\n\n@mixin SetFlexAlign ($align_items: flex-start) {\n\n\talign-items: $align_items;\n}\n\n@mixin ToVertical () {\n\n\tflex-direction: column;\n}\n\n@mixin ToHorizontal () {\n\n\tflex-direction: row;\n}\n\n@mixin ToVertical-inverse () {\n\n\tflex-direction: column-reverse;\n}\n\n@mixin ToHorizontal-inverse () {\n\n\tflex-direction: row-reverse;\n}\n\n\n//-text\n\n@mixin SetFontFamily($font_family) {\n\n\tfont-family: $font_family;\n}\n\n@mixin SetFontVars($font-weight, $letter-spacing, $color, $text-transform: inherit, $text-align: inherit) {\n\n\tfont-weight: $font-weight;\n\tletter-spacing: $letter-spacing * 1em;\n\tcolor: $color;\n\ttext-transform: $text-transform;\n\ttext-align: $text-align;\n}\n\n@mixin SetTextAlign($text-align: inherit) {\n\n\ttext-align: $text-align;\n}\n\n@mixin SetFontLineSize($vmin-scaler, $vw-scaler, $rem-scaler, $font-size, $line-height, $mode: desktop-middle) {\n\n\t$rem-font: ($rem-scaler * $font-size)/$font_size-global;\n\t$rem-line: ($rem-scaler * ($font-size + $line-height))/$font_size-global;\n\n\t$vmin-font: ($vmin-scaler * $font-size)/min(GetDeviceScreen($mode, horizontal), GetDeviceScreen($mode, vertical));\n\t$vmin-line: ($vmin-scaler * ($font-size + $line-height))/min(GetDeviceScreen($mode, horizontal), GetDeviceScreen($mode, vertical));\n\n\t$vw-font: ($vw-scaler * $font-size)/GetDeviceScreen($mode, horizontal);\n\t$vw-line: ($vw-scaler * ($font-size + $line-height))/GetDeviceScreen($mode, horizontal);\n\n\tfont-size: calc(#{$rem-font} * 1rem + #{$vmin-font} * 100vmin + #{$vw-font} * 100vw);\n\tline-height: calc(#{$rem-line} * 1rem + #{$vmin-line} * 100vmin + #{$vw-line} * 100vw);\n}\n\n\n//-properties\n\n@mixin SetBackground ($mode, $arg) {\n\n\t@if ($mode == solid)\n\t{\n\t\tbackground: $arg;\n\t}\n\t@else if ($mode == picture)\n\t{\n\t\tbackground: $arg  center 100% no-repeat;\n\t\tbackground-size: cover;\n\t}\n}\n\n@mixin SetPaddings ($up: 0, $down: 0, $left: 0, $right: 0) {\n\tpadding-top: $up;\n\tpadding-bottom: $down;\n\tpadding-left: $left;\n\tpadding-right: $right;\n}\n\n@mixin SetWidth-static ($width) {\n\n\twidth: $width * 1px;\n}\n\n@mixin SetMargins ($orientation, $up-left: 0, $down-right: 0, $scaler: 1, $mode: desktop-middle) {\n\n\t@if($orientation == vertical)\n\t{\n\t\tmargin-top: RelativeUnits($up-left, $scaler, $mode, $orientation);\n\t\tmargin-bottom: RelativeUnits($down-right, $scaler, $mode, $orientation);\n\t}\n\t@else if ($orientation == horizontal)\n\t{\n\t\tmargin-left: RelativeUnits($up-left, $scaler, $mode, $orientation);\n\t\tmargin-right: RelativeUnits($down-right, $scaler, $mode, $orientation);\n\t}\n}\n\n@mixin SetPaddings ($orientation, $up-left: 0, $down-right: 0, $scaler: 1, $mode: desktop-middle) {\n\n\t@if($orientation == vertical)\n\t{\n\t\tpadding-top: RelativeUnits($up-left, $scaler, $mode, $orientation);\n\t\tpadding-bottom: RelativeUnits($down-right, $scaler, $mode, $orientation);\n\t}\n\t@else if ($orientation == horizontal)\n\t{\n\t\tpadding-left: RelativeUnits($up-left, $scaler, $mode, $orientation);\n\t\tpadding-right: RelativeUnits($down-right, $scaler, $mode, $orientation);\n\t}\n}\n\n@mixin SetWidth-responsive ($width, $scaler: 1, $mode: desktop-middle) {\n\n\twidth: RelativeUnits($width, $scaler, $mode, horizontal);\n}\n\n@mixin Grid-area ($name) {\n\n  grid-area: $name;\n}\n\n@mixin SmartGrid($width, $LIST-rows) {\n\n  $LIST-names_areas-row-map: ();\n  $LIST-exceptions-intel_stretch: ();\n  @each $row in $LIST-rows {\n\n    $LIST-names_areas: ();\n    @each $name, $width-area in $row {\n      $LIST-names_areas: append($LIST-names_areas, $name);\n    }\n    $LIST-names_areas-row-map: append($LIST-names_areas-row-map, $LIST-names_areas);\n  }\n\n  @for $indexer from 1 through length($LIST-names_areas-row-map) - 1 {\n\n    @if LIST-GetSubElement($LIST-names_areas-row-map, $indexer, 1) == LIST-GetSubElement($LIST-names_areas-row-map, $indexer + 1, 1) {\n      $LIST-exceptions-intel_stretch: append($LIST-exceptions-intel_stretch, LIST-GetSubElement($LIST-names_areas-row-map, $indexer, 1));\n    }\n    @if LIST-GetSubElement($LIST-names_areas-row-map, $indexer, -1) == LIST-GetSubElement($LIST-names_areas-row-map, $indexer + 1, -1) {\n      $LIST-exceptions-intel_stretch: append($LIST-exceptions-intel_stretch, LIST-GetSubElement($LIST-names_areas-row-map, $indexer, -1));\n    }\n  }\n\n  //интеллектуальное округление\n  $indexer-row: 1;\n  $LIST-width_area-all: ();\n  @each $row in $LIST-rows {\n\n    $width-real: 0;\n\n    $LIST-names_areas-row: ();\n    $LIST-width_area_100_ceil-row: ();\n    $width-real-CEILED: 0;\n    $indexer-area: 1;\n\n    @each $name, $width-area in $row {\n\n      $LIST-width_area_100_ceil-row: append($LIST-width_area_100_ceil-row, ceil($width-area/100) * 100);\n      $width-real: $width-real + $width-area;\n      $width-real-CEILED: $width-real-CEILED + nth($LIST-width_area_100_ceil-row, $indexer-area);\n      $LIST-names_areas-row: append($LIST-names_areas-row, $name);//каталог имен, идущих по порядку, чтоб можно было обратиться по имени в массив листареа\n      $indexer-area: $indexer-area + 1;\n    }\n    @debug $LIST-width_area_100_ceil-row;\n\n    @if $width > $width-real-CEILED or $width == $width-real-CEILED {\n\n      @for $indexer-area from 1 through length($row) {\n\n        $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-width_area_100_ceil-row, $indexer-area))));\n        //$LIST-width_area-all: append($LIST-width_area-all, nth($LIST-width_area_100_ceil-row, $indexer-area));\n      }\n      @debug $LIST-rows;\n    }\n\n    @else {\n\n      $LIST-names_areas-row-width-10_ceil: ();\n      $width-real-CEILED: 0;\n      $indexer-area: 1;\n\n      @each $name, $width-area in $row {\n\n        $LIST-names_areas-row-width-10_ceil: append($LIST-width_area_100_ceil-row, ceil($width-area/10) * 10);\n        $width-real-CEILED: $width-real-CEILED + nth($LIST-names_areas-row-width-10_ceil, $indexer-area);\n        $indexer-area: $indexer-area + 1;\n      }\n      //@debug $LIST-names_areas-row-width-10_ceil;\n\n      @if $width > $width-real-CEILED or $width == $width-real-CEILED {\n\n        @for $indexer-area from 1 through length($row) {\n\n          $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-names_areas-row-width-10_ceil, $indexer-area))));\n          //$LIST-width_area-all: append($LIST-width_area-all, nth($LIST-names_areas-row-width-10_ceil, $indexer-area));\n        }\n      }\n    }\n\n    $indexer-row: $indexer-row + 1; //шаг по строкам, чтоб можно было обратиться напрямую к конкретному элементу массива $LIST-rows\n  }\n\n  @debug \"exceptions\";\n  //создание списка исключений\n  @each $exception in $LIST-exceptions-intel_stretch {\n    $indexer-row: 1;\n    @each $row in $LIST-rows {\n      @each $name, $width-area in $row {\n        @if $name == $exception {\n          $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), ($name:LIST-MAP_GetSubMin-name($LIST-rows, $name))));\n        }\n      }\n      $indexer-row: $indexer-row + 1;\n    }\n  }\n  //поправка запись обновленных данных в общий список ширин всех областей\n  @each $row in $LIST-rows {\n    @each $name, $width-area in $row {\n\n      $LIST-width_area-all: append($LIST-width_area-all, $width-area);\n    }\n  }\n\n  @debug $LIST-rows;\n  $fraction: 0;\n\n  //фракционные вычисления\n  $LIST-width_area-all: append($LIST-width_area-all, $width);//список ширин областей ВО ВСЕХ строках + максимальная ширина строки В ПИКСЕЛЯХ\n  $indexer-row: 1;\n  //@debug $LIST-width_area-all;\n  @each $row in $LIST-rows {\n\n    $LIST-names_areas-row: ();//список имен всех областей в ТЕКУЩЕЙ строке\n    @each $name, $width-area in $row {\n      $LIST-names_areas-row: append($LIST-names_areas-row, $name);\n    }\n\n    $fraction: GCF($LIST-width_area-all);\n\n    $LIST-width_area-row-fr: ();//список ширин областей в ТЕКУЩЕЙ строке\n    $TOTAL_width_area-row-fr: 0;//реальная ширина ТЕКУЩЕЙ строки В ФРАКЦИЯХ\n    //расчет начального сдвига для списка\n    $index-shifter: 0;\n    $timer: $indexer-row - 1;\n    @while $timer > 0 {\n      $index-shifter: $index-shifter + length(nth($LIST-rows, $timer));\n      $timer: $timer - 1;\n    }\n\n    //расчет ширин в фракциях для областей в текущей строке + расчет реальной длины строки в фракциях\n    @for $indexer from 1 through length($row) {\n\n      $LIST-width_area-row-fr: append($LIST-width_area-row-fr, nth($LIST-width_area-all, $index-shifter + $indexer)/$fraction);\n      $TOTAL_width_area-row-fr: $TOTAL_width_area-row-fr + nth($LIST-width_area-row-fr, $indexer);\n    }\n\n    @debug LIST-width_area-row-fr $LIST-width_area-row-fr;\n\n    $max: nth($LIST-width_area-row-fr, 1);\n  \t$max-index: 1;\n    $COUNTER-exception-row: 0;\n  \t@for $indexer from 1 through length($LIST-width_area-row-fr) {\n  \t\t@if $max < nth($LIST-width_area-row-fr, $indexer) and LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) == false {\n  \t\t\t$max: nth($LIST-width_area-row-fr, $indexer);\n  \t\t\t$max-index: $indexer;\n  \t\t}\n      @if LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) {\n        $COUNTER-exception-row: $COUNTER-exception-row + 1;\n      }\n  \t}\n    @debug counter $COUNTER-exception-row;\n\n    $REST-width_area-row: $width/$fraction - $TOTAL_width_area-row-fr;//остаток от максимальной ширины строки в ФРАКЦИЯХ\n    @debug rest $REST-width_area-row;\n    $width_area-fr-INCREMENT: $REST-width_area-row / (length($LIST-width_area-row-fr) - $COUNTER-exception-row);//среднее значение увеличения всех областей в строке для ликвидирования остатка В ФРАКЦИЯХ\n    @debug increment $width_area-fr-INCREMENT;\n\n    //intelligence stretcher\n    $indexer: 1;\n    @while $REST-width_area-row > 0 {\n\n      @if $indexer == $max-index {\n        $LIST-width_area-row-fr: set-nth($LIST-width_area-row-fr, $indexer, nth($LIST-width_area-row-fr, $indexer) + ceil($width_area-fr-INCREMENT));\n        $REST-width_area-row: $REST-width_area-row - ceil($width_area-fr-INCREMENT);\n      }\n      @else if LIST-CheckInclude($LIST-exceptions-intel_stretch, nth($LIST-names_areas-row, $indexer)) == false {\n        $LIST-width_area-row-fr: set-nth($LIST-width_area-row-fr, $indexer, nth($LIST-width_area-row-fr, $indexer) + floor($width_area-fr-INCREMENT));\n        $REST-width_area-row: $REST-width_area-row - floor($width_area-fr-INCREMENT);\n      }\n      $indexer: $indexer + 1;\n    }\n\n    @debug LIST-width_area-row-fr-increased $LIST-width_area-row-fr;\n\n    @for $indexer-area from 1 through length($row) {\n      $LIST-rows: set-nth($LIST-rows, $indexer-row, map-merge(nth($LIST-rows, $indexer-row), (nth($LIST-names_areas-row, $indexer-area):nth($LIST-width_area-row-fr, $indexer-area))));\n    }\n\n    $indexer-row: $indexer-row + 1\n  }\n\n  @debug $LIST-rows;\n\n  //формирование финальной строки\n  $width_row-fr: $width/$fraction;\n  grid-template-columns: repeat($width_row-fr, 1fr);\n  grid-template-rows: auto;\n  $STRING-name_area-all: \"\";\n  $LIST-name_area-all: ();\n  @debug $STRING-name_area-all;\n  @each $row in $LIST-rows {\n\n    $indexer-area: 1;\n    $STRING-name_area-all: \"\";\n    @each $name, $width_area-fr in $row {\n      @for $indexer from 1 through $width_area-fr {\n\n        $STRING-name_area-all: $STRING-name_area-all + $name;\n        @if $indexer-area != length($row) {\n          $STRING-name_area-all: $STRING-name_area-all + \" \";\n        }\n        @else {\n          @if $indexer != $width_area-fr {\n            $STRING-name_area-all: $STRING-name_area-all + \" \";\n          }\n        }\n      }\n      $indexer-area: $indexer-area + 1;\n    }\n    $LIST-name_area-all: append($LIST-name_area-all, BracketFunction($STRING-name_area-all));\n    @debug stringlocal BracketFunction($STRING-name_area-all);\n\n  }\n  @debug listarea $LIST-name_area-all;\n\n  $STRING-grid: \"\";\n  @for $indexer from 1 through length($LIST-name_area-all) {\n    $STRING-grid: $STRING-grid + nth($LIST-name_area-all, $indexer);\n  }\n  @debug $STRING-grid;\n  grid-template-areas:\n    #{$STRING-grid};\n}\n\n\n//-transforms\n\n@mixin TransformXY ($OffsetX, $OffsetY, $scaler: 1, $mode: desktop-middle) {\n\n\ttransform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode));\n\t-moz-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Firefox 3.5+ */\n\t-webkit-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Opera 10.5+ */\n\t-ms-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* IE 9.0 */\n}\n\n@mixin TransformScale ($ScaleX: 1, $ScaleY: 1) {\n\ttransform: scale($ScaleX, $ScaleY);\n\t-moz-transform: scale($ScaleX, $ScaleY); /* Firefox 3.5+ */\n\t-webkit-transform: scale($ScaleX, $ScaleY); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: scale($ScaleX, $ScaleY); /* Opera 10.5+ */\n\t-ms-transform: scale($ScaleX, $ScaleY); /* IE 9.0 */\n}\n\n@mixin TransformRotate ($Rotate) {\n\ttransform: rotate($Rotate);\n\t-moz-transform: rotate($Rotate); /* Firefox 3.5+ */\n\t-webkit-transform: rotate($Rotate); /* Safari 3.1+ и Chrome 2.0+ */\n\t-o-transform: rotate($Rotate); /* Opera 10.5+ */\n\t-ms-transform: rotate($Rotate); /* IE 9.0 */\n}\n","\n.adaptive_header {\n\t\tposition: fixed;\n\t\tdisplay: flex;\n\t\theight: 100px;\n\t\tjustify-content: space-between;\n\n\t\t#check {\n\t\t\tposition: absolute;\n\t\t\tvisibility: hidden;\n\t\t\tz-index: -1111;\n\t\t}\n\n\t\t.menu {\n\t\t\tline-height: 100px;\n\n\t\t\ta {\n\t\t\t\tcolor: #fff;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t}\n\t\t}\n\n\t\tlabel {\n\t\t\tfont-size: 30px;\n\t\t\tcursor: pointer;\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.menu a:hover,\n\t\t.show-menu:hover,\n\t\t.hide-menu:hover {\n\t\t\tcolor: #3498db;\n\t\t}\n\n\t@include _tablet-middle {\n\t\t.show_menu,.hide_menu {\n\t    \tdisplay: block;\n\t\t}\n\n\t\t.menu {\n\t\t\tposition: fixed;\n\t\t\twidth: 100%;\n\t\t\theight: 100vh;\n\t\t\tbackground: #333;\n\t\t\tright: -100%;\n\t\t\ttop: 0;\n\t\t\ttext-align: center;\n\t\t\tpadding: 80px 0;\n\t\t\tline-height: normal;\n\t\t\ttransition: 0.7s;\n\t\t\ta {\n\t\t\t\tdisplay: block;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t}\n\n\t\t.hide_menu {\n\t\t\tposition: absolute;\n\t\t\ttop: 40px;\n\t\t\tright: 40px;\n\t\t}\n\t\t#check:checked ~ .menu {\n\t\t\tright: 0;\n\t\t}\n\t}\n}\n\n@mixin RadioCheck($classname, $size, $margin-right, $color, $shadow, $border-radius, $scaler: 0.2, $mode: desktop-middle) {\n\tinput[type=radio].#{$classname} + label:before {\n\t\tcontent: \"\";\n\t\tdisplay: inline-block;\n\t\tvertical-align:middle;\n\t\twidth: RelativeUnits($size, $scaler, $mode, horizontal);\n\t\theight: RelativeUnits($size, $scaler, $mode, vertical);\n\t\tmargin-right: RelativeUnits($margin-right, $scaler, $mode, vertical);\n\t\tbackground-color: $color;\n\t\tbox-shadow: #{$shadow};\n\t\tborder-radius: $border-radius * 1px;\n\t}\n\n\tinput[type=radio].#{$classname}:checked + label:before {\n\t  content: \"\\2022\"; /* Bullet */\n\t  color:white;\n\t  background-color: #666;\n\t  font-size:1.8em;\n\t  text-align:center;\n\t  line-height:14px;\n\t  text-shadow:0px 0px 3px #eee;\n\t}\n}\n\ninput[type=checkbox] + label:before {\n  content: \"\";\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  vertical-align:middle;\n  margin-right: 8px;\n  background-color: #aaa;\n  box-shadow: inset 0px 2px 2px rgba(0, 0, 0, .3);\n  border-radius: 4px;\n}\n\ninput[type=checkbox]:checked + label:before {\n  content:\"\\2714\"; /* Tick */\n  color:white;\n  background-color: #666;\n  text-align:center;\n  line-height:15px;\n  text-shadow:0px 0px 3px #eee;\n}\n","$black: rgba(29, 29, 32, 1);\r\n$d_gray: rgba(42, 42, 46, 1);\r\n$l_gray: rgba(87, 87, 90, 1);\r\n$gray: rgba(50, 50, 55, 1);\r\n$yellow: rgba(255, 143, 0, 1);\r\n$white: rgba(250, 250, 250, 1);\r\n$transparent: rgba(255, 255, 255, 0);\r\n\r\n@import url(\"/node_modules/@fortawesome/fontawesome-free/css/all.min.css\");\r\n\r\n@font-face {\r\n    font-family: \"Myriad\";\r\n    src: url(\"../fonts/MyriadPro-Bold.otf\");\r\n    font-weight: 600;\r\n   }\r\n@font-face {\r\n   font-family: \"Myriad\";\r\n   src: url(\"../fonts/MyriadPro-Regular.otf\");\r\n  }\r\n\r\n.flex { display: flex; }\r\n.f-d-column { flex-direction: column; }\r\n.f-d-row { flex-direction: row; }\r\n.a-i-center { align-items: center; }\r\n.a-i-start { align-items: flex-start; }\r\n.a-i-end { align-items: flex-end; }\r\n.j-c-center { justify-content: center; }\r\n.j-c-start { justify-content: flex-start; }\r\n.j-c-end { justify-content: flex-end; }\r\n.j-c-s-around { justify-content: space-around; }\r\n.j-c-s-between { justify-content: space-between; }\r\n.w100 { width: 100%; }\r\n\r\nhtml {\r\n  font-family: \"Myriad\";\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.application-header {\r\n  width: 100%;\r\n  height: RelativeUnits(30, 0.3, desktop-middle, horizontal);\r\n  background: $yellow;\r\n  color: $d_gray;\r\n  font-weight: 600;\r\n  position: fixed;\r\n}\r\n\r\n.application-body {\r\n  height: 100vh;\r\n  background: $white;\r\n  color: $l_gray;\r\n}\r\n.form-sturdy {\r\n  border-radius: 10px;\r\n}\r\n\r\n.login-form {\r\n  @include SetWidth-responsive(485, 0.5);\r\n  min-height: RelativeUnits(660, 0.5, desktop-middle, horizontal);\r\n  background: $d_gray;\r\n  padding-top: 10px;\r\n  padding-bottom: RelativeUnits(60, 0.5, desktop-middle, horizontal);\r\n\r\n  .logo-text {\r\n    font-weight: 600;\r\n  }\r\n  .logo-img {\r\n    @include SetWidth-responsive(170, 0.4);\r\n    margin-top: RelativeUnits(65, 0.5, desktop-middle, horizontal);\r\n    margin-bottom: RelativeUnits(90, 0.5, desktop-middle, horizontal);\r\n  }\r\n  input {\r\n    height: 38px;\r\n    @include SetWidth-responsive(280, 0.4);\r\n    padding-left: 10px;\r\n    background: $gray;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: $l_gray;\r\n  }\r\n  .fields-wrap {\r\n    margin-bottom: RelativeUnits(60, 0.5, desktop-middle, horizontal);\r\n  }\r\n  .field {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .wait-for-it {\r\n    font-size: 24px;\r\n    margin-top: RelativeUnits(120, 0.5, desktop-middle, horizontal);\r\n    margin-bottom: RelativeUnits(45, 0.5, desktop-middle, horizontal);\r\n  }\r\n  .wait-for-it-lines {\r\n    height: 5px;\r\n    border-radius: 2px;\r\n    width: 170px;\r\n    background: url(\"../img/lines.svg\");\r\n    background-repeat: repeat-x;\r\n    animation-name: MOVE-BG;\r\n    animation-duration: 3s;\r\n    animation-timing-function: linear;\r\n    animation-iteration-count: infinite;\r\n  }\r\n}\r\n@keyframes MOVE-BG {\r\n    from {\r\n        background-position: 0% 0%\r\n    }\r\n    to {\r\n        background-position: 300% 0%\r\n    }\r\n}\r\n.sexy-button {\r\n  font-size: 14px;\r\n  @include SetWidth-responsive(160, 0.4);\r\n  height: RelativeUnits(66, 0.3, desktop-middle, horizontal);\r\n  border-radius: 10px;\r\n  border: 1.5px solid $yellow;\r\n  color: $yellow;\r\n  background: $transparent;\r\n\r\n  &:hover {\r\n    background: $yellow;\r\n    color: $d_gray;\r\n  }\r\n}\r\n\r\n.workspace-body {\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: $d_gray;\r\n\r\n  .workspace-items-wrap {\r\n    width: 100%;\r\n  }\r\n\r\n  .workspace-item {\r\n    padding-top: 60px;\r\n  }\r\n}\r\n\r\n.navigate-menu {\r\n  height: 100vh;\r\n  width: 155px;\r\n  background: $black;\r\n  padding-top: 60px;\r\n\r\n  .navigate-item {\r\n    @include SetMargins(vertical, 35, 35);\r\n  }\r\n  .navigate-icon {\r\n    font-size: 18px;\r\n    margin-bottom: 18px;\r\n  }\r\n  .selected, .navigate-item:hover {\r\n    p { color: $white; }\r\n    i { color: $yellow; }\r\n  }\r\n}\r\n\r\n\r\n.sexy-list {\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  color: $white;\r\n  max-width: 100%;\r\n\r\n  .sexy-caption {\r\n    background: $yellow;\r\n    color: $black;\r\n    padding: 8px;\r\n  }\r\n\r\n  .sexy-head-line {\r\n    background: $black;\r\n  }\r\n\r\n  .sexy-cell {\r\n    border: 1px solid $black;\r\n    text-align: center;\r\n    padding: 8px;\r\n    width: 150px;\r\n\r\n    button {\r\n      width: 100%;\r\n      border: none;\r\n      background: $yellow;\r\n      color: $black;\r\n      padding: 4px;\r\n      margin: -4px;\r\n    }\r\n\r\n    input {\r\n      width: 100%;\r\n      background: $transparent;\r\n      border: none;\r\n      color: $yellow;\r\n      text-align: center;\r\n      font-family: 'Myriad';\r\n    }\r\n  }\r\n  .sexy-line:nth-child(even) {\r\n    background: $l_gray;\r\n  }\r\n  .sexy-line:nth-child(odd) {\r\n    background: $gray;\r\n  }\r\n}\r\n.w-min {\r\n  .sexy-window-body {\r\n    display: none !important;\r\n  }\r\n}\r\n.w-max {\r\n  width: 100vw !important;\r\n  height: 100vh !important;\r\n  .sexy-window-body {\r\n    min-height: 100% !important;\r\n  }\r\n}\r\n.sexy-window {\r\n  @include SetWidth-responsive(500, 0.3);\r\n  max-width: 100%;\r\n  max-height: 100vh;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n\r\n  .sexy-window-head {\r\n    background: $yellow;\r\n    color: $d_gray;\r\n    font-weight: 600;\r\n    padding: 6px 12px;\r\n\r\n    i { color: $d_gray; background: $yellow; padding: 0 3px; }\r\n  }\r\n\r\n  .sexy-window-body {\r\n    background: $black;\r\n    overflow-x: auto;\r\n    min-height: 300px;\r\n  }\r\n}\r\n.multiple {\r\n  max-height: 30px;\r\n  margin: -8px 0;\r\n}\r\n.sexy-select {\r\n  background: $black !important;\r\n  border: none !important;\r\n  width: 100% !important;\r\n  color: $white !important;\r\n  appearance: none !important;\r\n  -moz-appearance: none !important;\r\n  -webkit-appearance: none !important;\r\n\r\n  option {\r\n    border: none !important;\r\n  }\r\n}\r\n\r\n.sexy-dialog {\r\n  padding: 50px 16px;\r\n  input { width: 80%; }\r\n}\r\n.sexy-input {\r\n  background: $gray;\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  color: $white;\r\n  margin-bottom: 50%;\r\n}\r\n","//-calculates\n\n@function RelativeUnits($object, $scaler, $mode, $orientation) {\n\n\t@if ($orientation == vertical) {\n\t\t@return calc(#{$scaler * $object/GetDeviceScreen($mode, $orientation)} * 100vh + #{(1 - $scaler) * $object * 1px});\n\t}\n\t@else if ($orientation == horizontal) {\n\t\t@return calc(#{$scaler * $object/GetDeviceScreen($mode, $orientation)} * 100vw + #{(1 - $scaler) * $object * 1px});\n\t}\n}\n\n@function BracketFunction($string) {\n  @return '\"#{$string}\"';\n}\n\n@function CheckInt($number) {\n\t@if ($number - floor($number)) == 0 {\n\t\t@return true;\n\t}\n\t@else {\n\t\t@return false;\n\t}\n}\n\n@function GCF($list) {\n\n\t$gcf: 1;\n\t$gcf-maybe: 1;\n\n\t@while $gcf-maybe <= LIST_GetMin($list) {\n\n\t\t$rest: 0;\n\t\t@for $indexer from 1 through length($list) {\n\t\t\t$rest: $rest + (nth($list, $indexer)/$gcf-maybe - floor(nth($list, $indexer)/$gcf-maybe));\n\t\t}\n\t\t@if $rest == 0 {\n\t\t\t$gcf: $gcf-maybe;\n\t\t}\n\t\t$gcf-maybe: $gcf-maybe + 1;\n\t}\n\n\t@return $gcf;\n}\n\n//-Gets\n\n@function GetDeviceScreen($mode, $orientation) {\n\t@return map-get($devices, \"\" + $mode + \"-\" + $orientation);\n}\n\n//--Lists\n\n@function LIST-GetSubElement($list, $element, $sub-element) {\n\t$i-element: 1;\n\t@each $list_element in $list {\n\t\t@if ($i-element == $element) {\n\t\t\t@return nth($list_element, $sub-element);\n\t\t}\n\t\t$i-element: $i-element + 1;\n\t}\n}\n\n@function LIST-MAP_GetSubMin-name($list, $name) {\n\t$LIST-result: ();\n\t@each $list_element in $list {\n\t\t@if map-get($list_element, $name) != null {\n\t\t\t$LIST-result: append($LIST-result, map-get($list_element, $name));\n\t\t}\n\t}\n\t$result: LIST_GetMin($LIST-result);\n\t@return $result;\n}\n\n@function LIST-GetMax($list) {\n\t$max: nth($list, 1);\n\t@for $indexer from 1 through length($list) {\n\t\t@if $max < nth($list, $indexer) {\n\t\t\t$max: nth($list, $indexer);\n\t\t}\n\t}\n\t@return $max;\n}\n\n@function LIST-GetMin($list) {\n\t$min: nth($list, 1);\n\t@for $indexer from 1 through length($list) {\n\t\t@if $min > nth($list, $indexer) {\n\t\t\t$min: nth($list, $indexer);\n\t\t}\n\t}\n\t@return $min;\n}\n\n@function LIST-GetMaxIndex($list) {\n\t$max: nth($list, 1);\n\t$max-index: 1;\n\t@for $indexer from 1 through length($list) {\n\t\t@if $max < nth($list, $indexer) {\n\t\t\t$max: nth($list, $indexer);\n\t\t\t$max-index: $indexer;\n\t\t}\n\t}\n\t@return $max-index;\n}\n\n@function LIST-GetMinIndex($list) {\n\t$min: nth($list, 1);\n\t$min-index: 1;\n\t@for $indexer from 1 through length($list) {\n\t\t@if $min > nth($list, $indexer) {\n\t\t\t$min: nth($list, $indexer);\n\t\t\t$min-index: $indexer;\n\t\t}\n\t}\n\t@return $min-index;\n}\n\n@function LIST-CheckInclude($list, $element) {\n\t$result: false;\n\t@each $list_element in $list {\n\t\t@if $list_element == $element {\n\t\t\t$result: true;\n\t\t}\n\t}\n\t@return $result;\n}\n"],"sourceRoot":""}